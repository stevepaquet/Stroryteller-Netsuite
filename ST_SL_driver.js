/**
 * @NApiVersion 2.x
 * @NScriptType Suitelet
 * @NModuleScope SameAccount
 */

define(['N/search', 'N/ui/serverWidget', 'N/https', 'N/runtime', 'N/query', 'N/record', 'N/log', 'N/file', 'N/task', 'N/format', 'N/email', 'N/currentRecord', 'N/search'],
 
function(search, serverWidget, https, runtime, query, record, log,file, task, format, email, currentRecord, search) {
  
    function onRequest(context) { 
      log.debug ('context',context)
        var PARAMS = context.request.parameters; 
        var _restletid = PARAMS.restletid; 
        var _email     = PARAMS.email;
        var _token     = PARAMS.token;
        var _caseid    = parseInt(PARAMS.caseid) || 0;
        var _id        = parseInt(PARAMS.id) || 0;
        var _params    = PARAMS.params;
        
   //    log.debug (' ','Restletid=' + _restletid)
   //     log.debug (' ','_email=' + _email)
   //     log.debug (' ','_token=' + _token)
   //     log.debug (' ','_id=' + _id)
      
       
        /*log.debug ('params '  ,'_params=' + (JSON.stringify(PARAMS.email)));
        log.debug ('picture '  ,'_params=' + (JSON.stringify(PARAMS.file)));
        log.debug ('picture '  ,PARAMS.file = "");
      */
      
        if (_restletid == 0) return;

///////////////
// Get Token //
///////////////      
             if (_restletid == 1637) {               
                var _token = makeid(40);
                var Rerror = record.create({type: "customrecord_tokens",isDynamic: true}); 
                Rerror.setValue({fieldId: "custrecord_tokens_token",value: _token });
                Rerror.save({enableSourcing: true,ignoreMandatoryFields: true});	  
                context.response.write(JSON.stringify(_token));
                return;
             } //if (_restletid == 1637) {  
      
////////////////////
// Validate Token //      
////////////////////
      /*
                var _sql = "SELECT (current_date - created) AS difference FROM customrecord_tokens " +
                           " WHERE custrecord_tokens_token = '" + _token + "'";
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var results = queryResultSet.asMappedResults();
                if (results.length == 0) {
                   var aa = {status:'Token Issue'};
                   context.response.write(JSON.stringify(aa));
                   return;
                }
                var _diff = (results[0].difference).split(" ");
                var _days = _diff[0];
                log.debug(' ','_days=' + _days)
                if (_days != 0) {
                   var aa = {status:'Token Issue'};
                   context.response.write(JSON.stringify(aa));
                   return;
                }
                var _time = _diff[1].split(":");
                var _hours = parseInt(_time[0]);
                 log.debug(' ','_hours =' + _hours)
                if (_hours > 0) {
                   var aa = {status:'Token Issue'};
                   context.response.write(JSON.stringify(aa));
                   return;
                }                
*/
////////////////////
// Validate Email //
////////////////////      
             // log.debug(' ','step 1    _restletid=' + _restletid)
             if (_restletid == 1638) {               
                /* dealer */ 
                var _sql = "SELECT id, BUILTIN.DF(category) AS name, companyname, isperson FROM customer " +
                           " WHERE email = '" + _email + "'" +
                           "   AND isinactive = 'F' " + 
                           "   AND category = 1 ";
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var r_custcontact = queryResultSet.asMappedResults();
                var obj_findemail = [];
                var v_custtype = "";
                /* DEALER */
                for (var i = 0; i <  r_custcontact.length; i++) {
                   v_custtype = "Company";
                   if (r_custcontact[i]['isperson'] == "T") {v_custtype = "Individual"};
                   obj_findemail.push ({record_type: "Customer",
                                      id:  r_custcontact[i]['id'],
                                      type: v_custtype,
                                      category: r_custcontact[i]['name'],
                                      company: null
                                    
                   });  
                } 
                
                /* OWNER */ 
                var _sql = "SELECT id, BUILTIN.DF(category) AS name, companyname, isperson, parent FROM customer " +
                           " WHERE email = '" + _email + "'" +
                           "   AND isinactive = 'F' " + 
                           "   AND category = 2 " +
                           "   AND isperson = 'T' ";

                var queryResultSet = query.runSuiteQL({ query: _sql });
                var r_custcontact = queryResultSet.asMappedResults();
                var v_comp = 0;
                for (var i = 0; i <  r_custcontact.length; i++) {
                   var v_comp = r_custcontact[i]['parent'] || 0;
                   if (v_comp == 0) {
                      v_custtype = "Company";
                      if (r_custcontact[i]['isperson'] == "T") {v_custtype = "Individual"};
                      obj_findemail.push ({record_type: "Customer",
                                           id:  r_custcontact[i]['id'],
                                           type: v_custtype,
                                           category: r_custcontact[i]['name'],
                                           company: null
                                    
                      });  
                   }
                }
                /* SUB OWNER */
                var _sql = "SELECT id, BUILTIN.DF(category) AS name, companyname, isperson, parent FROM customer " +
                           " WHERE email = '" + _email + "'" +
                           "   AND isinactive = 'F' " + 
                           "   AND category = 2 " +
                           "   AND isperson = 'T' " + 
                           "   AND parent > 0";
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var r_custcontact = queryResultSet.asMappedResults();
                for (var i = 0; i <  r_custcontact.length; i++) {
                   v_custtype = "Company";
                   if (r_custcontact[i]['isperson'] == "T") {v_custtype = "Individual"};
                   obj_findemail.push ({record_type: "Customer",
                                      id:  r_custcontact[i]['id'],
                                      type: v_custtype,
                                      category: r_custcontact[i]['name'],
                                      company: r_custcontact[i]['parent']
                                    
                   });  
                }
                
                /* DEALER CONTACT */  
                var _sql = "SELECT id, company FROM contact " +
                           " WHERE email = '" + _email + "'" +
                           "   AND isinactive = 'F' " /* + 
                           "   AND company > 0" */ ;
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var r_custcontact = queryResultSet.asMappedResults();
                for (var i = 0; i <  r_custcontact.length; i++) {
                   obj_findemail.push ({record_type: "Contact",
                                        id:  r_custcontact[i]['id'],
                                        type: null,
                                        category: null,
                                        company: r_custcontact[i]['company']
                                    
                   });  
                }
                var _sql = "SELECT id FROM employee " +
                           " WHERE email = '" + _email + "'" +
                           "   AND isinactive = 'F' ";
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var r_employee = queryResultSet.asMappedResults();
                for (var i = 0; i <  r_employee.length; i++) {
                   obj_findemail.push ({record_type: "Employee",
                                        id:  r_employee[i]['id'],
                                        type: null,
                                        category: null,
                                        company: null
                                    
                   });  
                }
                context.response.write(JSON.stringify(obj_findemail));
                return;                
                
               /**** OLD OLD OLD... DO NOT USE
                var _sql = "SELECT id, category, BUILTIN.DF(category) AS name FROM customer " +
                           " WHERE email = '" + _email + "'" +
                           "   AND isinactive = 'F'";
               log.debug(' ','step 2    _sql=' + _sql)
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var results = queryResultSet.asMappedResults();
                var aa = {status:'Not Found'};
               log.debug(' ','step 3    results.length=' + results.length)
                if (results.length == 1)
                   aa = {status:'Found',id:results[0].id,category:results[0].name};
               
                context.response.write(JSON.stringify(aa));
                return;
                **********/
             } //if (_restletid == 1638) {       

////////////////////
// Get Owner Info //
////////////////////
             if (_restletid == 1639 ) {   
                /*************
                 * var _sql = " SELECT CUSTOMRECORD_STO_VAN.name AS VIN, " +
                           " custrecord_sto_van_model as model, " +
                           " custrecord_van_waranty_start AS warranty_start, " +
                           " custrecord_sto_van_warr_exp AS warranty_end, " +
                           " custrecord_sto_van_warr_reg, " +
                           " BUILTIN.DF(custrecord_sto_van_warr_reg), " +
                           " customer.entityid, customer.firstname, customer.lastname," +
                           " customer.email, " +
                           " customer.phone, " +
                           " BUILTIN.DF(customer.category) AS category, " +
                           " companyaddressbookentityaddress.addr1 ,  " +  
                           " companyaddressbookentityaddress.addr2 ,  " +   
                           " companyaddressbookentityaddress.city ,   " +  
                           " companyaddressbookentityaddress.state ,  " +   
                           " companyaddressbookentityaddress.zip ,   " +  
                           " companyaddressbookentityaddress.country  , " +
						   " BUILTIN.DF(custentity_contact_preference) AS preference, " +
						   " FROM CUSTOMRECORD_VAN_OWNERS " +
                           " INNER JOIN customer on customer.id = custrecord_van_owner_contact " +
						   " LEFT JOIN CUSTOMRECORD_STO_VAN on CUSTOMRECORD_STO_VAN.custrecord_sto_van_currentowner = Customer.id " +
                           " LEFT JOIN companyaddressbookentityaddress ON   " +  
                           "			companyaddressbookentityaddress.nkey = customer.defaultshippingaddress " +
						   " WHERE custrecord_van_owner_contact=" + _id;
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var Rdata = queryResultSet.asMappedResults();

                var _address={addr1: Rdata[0].addr1,
                              addr2: Rdata[0].addr2,
                              city: Rdata[0].city,
                              state: Rdata[0].state,
                              zip: Rdata[0].zip
                             };

                var _user={name: Rdata[0].entityid,  
                           category: Rdata[0].category,
                           firstname: Rdata[0].firstname,  
                           lastname: Rdata[0].lastname,
                           email: Rdata[0].email,  
                           phone: Rdata[0].phone,  
                           address: _address,
                           communication_preference: Rdata[0].preference
                          };
               
                // Get Vans Info //            
               var _sql = "SELECT REPLACE(name , 'Warranty Registration', '') as vin, custrecord_sto_warr_reg_van_model as model, " +
                          " custrecord_sto_warr_reg_expiration_date as expiration, custrecord_sto_warr_reg_start_date as started, " + 
                          " FROM customrecord_sto_warr_reg WHERE custrecord_sto_warr_reg_primowner =  " + _id;
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var Rvans = queryResultSet.asMappedResults();
                var obj_vans =[];
                for (var i = 0; i < Rvans.length; i++) {
                    obj_vans.push ({vin:Rvans[i]['vin'],
                                     model: Rvans[i]['model'],
                                     warranty_start_date:Rvans[i]['started'] ,
                                     warranty_expiration_date: Rvans[i]['expiration']
                                   });  
                } //for (var jj = 0; jj < results2.length; jj++) {  
                var response = {id: _id,
                                category: Rdata[0].category,
                        //        user: _user,
                                name: Rdata[0].entityid,  
                                   category: Rdata[0].category,
                                   firstname: Rdata[0].firstname,  
                                   lastname: Rdata[0].lastname,  
                                   email: Rdata[0].email,  
                                   phone: Rdata[0].phone,  
                                   address: _address,
                                   communication_preference: Rdata[0].preference,

                                vans: obj_vans
                               };
               */
				var _sql = " SELECT id, firstname, lastname, BUILTIN.DF(category) AS _cat, email, phone, defaultbillingaddress, defaultshippingaddress " + 
        				   " FROM customer " +
               				" WHERE customer.id = " + _id;
        		var queryResultSet = query.runSuiteQL({ query: _sql });
        		var Rcust = queryResultSet.asMappedResults();          
                if (Rcust.length == 0) {
                  obj_owner = {id : _id,
                               firstname: "NOT FOUND"};
                }
                else {
                    var vaddr = Rcust[0].defaultbillingaddress;
                    if ( vaddr == 0 ) {
                        vaddr = Rcust[0].defaultshippingaddress;
                    }
                    var obj_addr = "";
                    var obj_vans = [];
                    if ( vaddr != 0 ) { 
                        var _sql = " SELECT addr1, addr2, city, state, zip " + 
                                   " FROM companyaddressbookentityaddress " +
                                   " WHERE companyaddressbookentityaddress.nkey = " + vaddr;
                        var queryResultSet = query.runSuiteQL({ query: _sql });
                        var Raddr = queryResultSet.asMappedResults();
                        obj_addr = {addr1: Raddr[0].addr1,
                                    addr2: Raddr[0].addr2,
                                    city:  Raddr[0].city,
                                    state: Raddr[0].state,
                                    zip:   Raddr[0].zip };            
                    }


                  
                    var _sql = "SELECT customrecord_sto_van.id, " + 
                                      "customrecord_sto_van.name, " + 
                                      "custrecord_sto_warr_reg_van_model, " + 
                                      "custrecord_sto_warr_reg_start_date, " +  
                                      "custrecord_sto_warr_reg_expiration_date, " + 
                                      "customrecord_sto_warr_reg.id as van_id " + 
                               " FROM  customrecord_sto_van, customrecord_sto_warr_reg " +
                               " WHERE customrecord_sto_warr_reg.custrecord_sto_warr_reg_van_vin = customrecord_sto_van.id " + 
                               "   AND customrecord_sto_van.custrecord_sto_van_currentowner   = " + _id ;                  
                  
                    var queryResultSet = query.runSuiteQL({ query: _sql });
                    var r_vans = queryResultSet.asMappedResults();
 
                    for (var i = 0; i <  r_vans.length; i++) {
                        obj_vans.push ({vin: r_vans[i].name,
                                        model : r_vans[i].custrecord_sto_warr_reg_van_model,
                                        warranty_start_date : r_vans[i].custrecord_sto_warr_reg_start_date,
                                        warranty_expiration_date : r_vans[i].custrecord_sto_warr_reg_expiration_date,
                                        warranty_id :  r_vans[i].van_id
                        });  
                    }      
                    if (obj_vans == []) obj_vans = "No Vans";
                    var obj_owner = {id : Rcust[0].id,
                                     firstname : Rcust[0].firstname,
                                     lastname : Rcust[0].lastname,
                                     category : Rcust[0]._cat,
                                     email: Rcust[0].email,
                                     phone: Rcust[0].phone,
                                     addr1: Raddr[0].addr1,
                                     addr2: Raddr[0].addr2,
                                     city:  Raddr[0].city,
                                     state: Raddr[0].state,
                                     zip:   Raddr[0].zip,
                                     vans : obj_vans
                    }
                }
                context.response.write(JSON.stringify(obj_owner)); 
                return;
             } //if (_restletid == 1639 ) {      
      
////////////////////
// Owner Issues   //
////////////////////    
             if (_restletid == 1645 ) {               
               var obj_data =[];
               var vcontactname = "";
               var vvanname = "";
               if (_id != 0) { // search by customer id
                  var _sql = "SELECT id AS caseid, casenumber, title, BUILTIN.DF(status) AS status, BUILTIN.DF(category) as type, custevent_nsts_rfc_trans_from, lastcustomermessagereceived, custeventco_case_van_record, datecreated, " +
                             " FROM supportcase WHERE company = " + _id + " ORDER by datecreated DESC" ;
                  var queryResultSet = query.runSuiteQL({ query: _sql });
                  var Rissues = queryResultSet.asMappedResults();
                  if (Rissues.length == 0) {
                      var aa = {status:'No cases'};
                      context.response.write((aa));
                      return;
                  }
                  for (var i = 0; i < Rissues.length; i++) {
                     var obj_contact = search.lookupFields({ type: search.Type.SUPPORT_CASE, 
                                                              id : Rissues[i].caseid , 
                                                              columns: 'contact' }); 
                     vcontactname = "";
                     try{
                 	   vcontactname = obj_contact.contact[0].text ;
                     } catch (e) {};
                     var _sql = "SELECT name, id " + 
                                "FROM customrecord_sto_van " + 
                                "WHERE customrecord_sto_van.id = " + Rissues[i].custeventco_case_van_record;
                     var queryResultSet = query.runSuiteQL({ query: _sql });
                     var RVan = queryResultSet.asMappedResults();
                     var vvanname = "";
                     if (RVan.length != 0) vvanname = RVan[0].name;
                     var _data = {};
                     _data.caseid = Rissues[i]['caseid'];
                     _data.casenumber = Rissues[i]['casenumber'];
                     _data.title = Rissues[i]['title'];
                     _data.status = Rissues[i]['status'];
                     _data.type = Rissues[i]['type'];
                     _data.contact = vcontactname;
                     _data.transaction_from = Rissues[i]['custevent_nsts_rfc_trans_from'];
                     _data.datecreated = Rissues[i]['datecreated'];
                     _data.last_modified_date = Rissues[i]['lastcustomermessagereceived'];
                     _data.van_id = Rissues[i]['custeventco_case_van_record'];
                     _data.van_vin = vvanname;
                     obj_data.push(_data);
                  } //for (var i = 0; i < Rissues.length; i++) {*/ 
                } // if (_id != 0) { 
                else {
                  if ( PARAMS.vanid != 0) { // search by van id
                    var _sql = 	"SELECT name, id " + 
                                  "FROM customrecord_sto_van " + 
                                  "WHERE customrecord_sto_van.id = " + PARAMS.vanid;
                    var queryResultSet = query.runSuiteQL({ query: _sql });
                    var Rvan = queryResultSet.asMappedResults();
                    if (Rvan.length == 0) {
                        var aa = {status:'Van not found'};
                        context.response.write(JSON.stringify(aa));
                        return;
                    }                    
                    var vvanname = "";
                    vvanname = Rvan[0].name;
                    var _sql = "SELECT id AS caseid, casenumber, title, BUILTIN.DF(status) AS status, BUILTIN.DF(category) as type, custevent_nsts_rfc_trans_from, lastcustomermessagereceived, custeventco_case_van_record, datecreated " +
                               " FROM supportcase WHERE custeventco_case_van_record = " + PARAMS.vanid + " ORDER by datecreated DESC";
                   log.debug("sql1", JSON.stringify(_sql));
                   var queryResultSet = query.runSuiteQL({ query: _sql });
                    var Rissues = queryResultSet.asMappedResults();
                    if (Rissues.length == 0) {
                        var aa = {status:'No cases'};
                        context.response.write(JSON.stringify(aa));
                        return;
                    }
                    for (var i = 0; i < Rissues.length; i++) {
                      var obj_contact = search.lookupFields({ type: search.Type.SUPPORT_CASE, 
                                                              id : Rissues[i].caseid , 
                                                              columns: 'contact' }); 
                      vcontactname = "";
                      try{
                 	    vcontactname = obj_contact.contact[0].text ;
                      } catch (e) {};
                     
                      var _data = {};
                      _data.caseid = Rissues[i]['caseid'];
                      _data.casenumber = Rissues[i]['casenumber'];
                      _data.title = Rissues[i]['title'];
                      _data.status = Rissues[i]['status'];
                      _data.type = Rissues[i]['type'];
                      _data.contact = vcontactname;
                      _data.transaction_from = Rissues[i]['custevent_nsts_rfc_trans_from'];
                      _data.datecreated = Rissues[i]['datecreated'];
                      _data.last_modified_date = Rissues[i]['lastcustomermessagereceived'];
                      _data.van_id = Rissues[i]['custeventco_case_van_record'];
                      _data.van_vin = vvanname;
                      obj_data.push(_data);
                    }
                  }
                }
                context.response.write(JSON.stringify(obj_data));
                return;
             } //if (_restletid == 1645) {         

      
//////////////////////////
// GET Case info //
/////////////////////////    
             
		    function getFiles(internalid) {
                var filters = [{
                    name: 'internalid',
                    operator: 'anyof',
                    values: [internalid]
                }];
                var scriptRecordSearch = search.create({
                    type: 'supportcase',
                    title: 'My Record Search',
                    id: 'customsearch_my_record_search',
                    columns: [{
                        name: 'internalid',
                        join: 'file'
                    }, {
                        name: 'name',
                        join: 'file'
                    }, {
                        name: 'filetype',
                        join: 'file'
                    }, {
                        name: 'folder',
                        join: 'file'
                    }, {
                        name: 'description',
                        join: 'file'
                    }, {
                        name: 'documentsize',
                        join: 'file'
                    }, {
                        name: 'url',
                        join: 'file'
                    }],
                    filters: filters
                });

                var files = [];

                var search_result = scriptRecordSearch.run();
                search_result.each(function(result) {
                    if (result.getValue(search_result.columns[0])) {
                        files.push({
                            internalid: result.getValue(search_result.columns[0]),
                            name: result.getValue(search_result.columns[1]),
                            type: result.getValue(search_result.columns[2]),
                            folder: result.getText(search_result.columns[3]),
                            description: result.getValue(search_result.columns[4]),
                            documentsize: result.getValue(search_result.columns[5]),
                            url: "https://5330460.app.netsuite.com" + result.getValue(search_result.columns[6])

                        });
                    }

                    return true;
                });
                return files;
            } // function getFiles(internalid) {
      
            if (_restletid == 1648) {               
                var _sql = "SELECT title, supportcase.id AS caseid, BUILTIN.DF(supportcase.id) AS casenumber, BUILTIN.DF(status) as casestatus, assigned, " + 
                           "BUILTIN.DF(category) as casecateg, datecreated, startdate, timeopen, BUILTIN.DF(custeventco_case_van_record) as vinrec, custeventco_case_van_record as vanid " +
                           " FROM supportcase " + 
                           " WHERE supportcase.id = " + _caseid ;
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var Rcase = queryResultSet.asMappedResults();
                if (Rcase.length == 0) {
                    var aa = {status:'No issue'};
                    context.response.write(JSON.stringify(aa));
                    return;
                }
               
                var _sql = "SELECT TO_CHAR ( dateTime , 'YYYY-MM-DD HH:MI:SS' ) vdatetime, " + 
                           " author, BUILTIN.DF(author) AS authorname, recipientemail, message.message, recipient, primaryRecipient " + 
                           " FROM message " + 
                           " WHERE message.activity = " + _caseid + 
                           " ORDER BY vdatetime ASC";
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var Rmessage = queryResultSet.asMappedResults();
              

//// ADD LOGIC IN CASE THERE IS NO MESSAGES                
               if (Rmessage.length == 0) {
                    var aa = {status:'No Messages'};
                    context.response.write(JSON.stringify(aa));
                    return;
                }
                var obj_message = [];
                for (var i = 0; i < Rmessage.length; i++) {
                  var v_recip = parseInt(Rmessage[i].recipient) || null;
                  
                  var _data = {};
                  _data.messagedate    = Rmessage[i]['vdatetime'];
                  _data.authorname     = Rmessage[i]['authorname'];
                  _data.authorid         = Rmessage[i]['author'];
                  _data.recipientid    = v_recip;
                  _data.message        = Rmessage[i]['message'];
                  obj_message.push(_data);
                }
                
                var v_assigned = parseInt(Rcase[0].assigned) || null;
                var obj_files = getFiles(_caseid);
                var obj_data = {caseid   : Rcase[0]['caseid'],
                                subject  : Rcase[0]['title'],
                                status   : Rcase[0]['casestatus'],
               			 	    type     : Rcase[0]['casecateg'],
               		 		    date     : Rcase[0]['startdate'],
               	 			    //time     : Rcase[0]['timeopen'],
                                vin      : Rcase[0]['vinrec'],
                				vinid    : Rcase[0]['vanid'],
                                assigned : v_assigned,
                                messages : obj_message,
                                files    : obj_files};
                context.response.write(JSON.stringify(obj_data));
                return;
             } //if (_restletid == 1648) {  
      
/////////////////////////////      
// PUT Owner Account Info  // 
/////////////////////////////
             if (_restletid == 1650 ) {        
                 record.submitFields({
							type: 'customer',
							id: _id,
							values: {'altemail': 'aaa@bbb.com'},
						});
                context.response.write(JSON.stringify({status:'Done'})); 
                return;
               
/*               
                var _sql = "SELECT id, category, BUILTIN.DF(category) AS name FROM customer " +
                           " WHERE email = '" + _email + "'" +
                           "   AND isinactive = 'F'";
               log.debug(' ','step 2    _sql=' + _sql)
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var results = queryResultSet.asMappedResults();               
                                          " customer.entityid, " +
                           " customer.email, " +
                           " customer.phone, " +
                           " BUILTIN.DF(customer.category) AS category, " +
                           " companyaddressbookentityaddress.addr1 ,  " +  
                           " companyaddressbookentityaddress.addr2 ,  " +   
                           " companyaddressbookentityaddress.city ,   " +  
                           " companyaddressbookentityaddress.state ,  " +   
                           " companyaddressbookentityaddress.zip ,   " +  
                           " companyaddressbookentityaddress.country  , " +
						   " BUILTIN.DF(custentity_contact_preference) AS preference, " +
						   " FROM CUSTOMRECORD_VAN_OWNERS " +
                 var IFObject = record.load({
                            type: record.Type.ITEM_FULFILLMENT,
                            id: _id,
                            isDynamic: true,
                        });
*/                        
             } // if (_restletid == 1650 ) {       
      
////////////////////
// Get Dealer Info //
////////////////////
              if (_restletid == 1655 ) {   
                  var _sql = "SELECT category AS id, BUILTIN.DF(category) AS name, " + 			  
                             "  companyname, category,email, phone, altphone,url, sourcewebsite AS website, defaultbillingaddress, defaultshippingaddress " + 
                             /*
                             "  companyaddressbookentityaddress.attention ,  " + 
                             "  companyaddressbookentityaddress.addressee ,  " +            
                             "  companyaddressbookentityaddress.addr1 , " +   
                             "  companyaddressbookentityaddress.addr2 ,  " +  
                             "  companyaddressbookentityaddress.city ,  " +  
                             "  companyaddressbookentityaddress.state ,  " +  
                             "  companyaddressbookentityaddress.zip ,  " +  
                             "  companyaddressbookentityaddress.country  " +  
                             */
                             " FROM customer " +
                             /*
                             " INNER JOIN companyaddressbookentityaddress ON  " +    
                             " companyaddressbookentityaddress.nkey = customer.defaultshippingaddress " + 
                             */
                             " WHERE id = " + _id;
                var queryResultSet = query.runSuiteQL({ query: _sql });
                log.debug( ' ',_sql)
                var Rowner = queryResultSet.asMappedResults();
                log.debug( ' ',"Rowner.length" + Rowner.length);
                log.debug( ' ',"Rowner[0].defaultshippingaddress" + Rowner[0].defaultshippingaddress);
                log.debug( ' ',"Rowner[0].defaultbillingaddress" +  Rowner[0].defaultbillingaddress);
                
                var v_addr = Rowner[0].defaultshippingaddress || 0;
                if (v_addr == 0) v_addr = Rowner[0].defaultbillingaddress || 0;
                var v_Caddr1 = "";
                var v_Caddr2 = "";
                var v_Ccity = "";
                var v_Cstate = "";
                var v_Czip = "";
                if ( v_addr != 0 ) { 
                   var _sql = "SELECT companyaddressbookentityaddress.attention ,  " + 
                              "  companyaddressbookentityaddress.addr1 , " +   
                              "  companyaddressbookentityaddress.addr2 ,  " +  
                              "  companyaddressbookentityaddress.city ,  " +  
                              "  companyaddressbookentityaddress.state ,  " +  
                              "  companyaddressbookentityaddress.zip ,  " +  
                              "FROM companyaddressbookentityaddress " +
                              "WHERE nkey = " + v_addr;
                   var queryResultSet = query.runSuiteQL({ query: _sql });
                   var Raddr = queryResultSet.asMappedResults();
                   v_Caddr1 = Raddr[0].addr1;
                   v_Caddr2 = Raddr[0].addr2 || "";
                   v_Ccity =  Raddr[0].city;
                   v_Cstate = Raddr[0].state;
                   v_Czip = Raddr[0].zip;
                }
                
                  var _sql = "SELECT id, firstname, lastname,email, phone, title FROM contact WHERE company = " + _id + " AND isinactive = 'F'";
                  var queryResultSet = query.runSuiteQL({ query: _sql });
                  var Rcontacts = queryResultSet.asMappedResults();
                  var obj_contacts =[];
             
                  for (var i = 0; i < Rcontacts.length; i++) {
                    
                      obj_contacts.push ({id:Rcontacts[i]['id'],
                                       firstname: Rcontacts[i]['firstname'],
                                       lastname:Rcontacts[i]['lastname'] ,
                                       email: Rcontacts[i]['email'],
                                       phone:Rcontacts[i]['phone'] ,
                                       alt_phone:Rcontacts[i]['altphone'] ,
                                       title: Rcontacts[i]['title']
                                     });  
                                     
                  } //for (var jj = 0; jj < results2.length; jj++) {  

                  var response = {category: Rowner[0].name,
                                  company_name: Rowner[0].companyname,
                                  email: Rowner[0].email,
                                  phone: Rowner[0].phone,
                                  alt_phone: Rowner[0].alt_phone,
                                  website: Rowner[0].url,
                                  address: {address_1: v_Caddr1,
                                            address_2: v_Caddr2,
                                            city: v_Ccity,
                                            state: v_Cstate,
                                            zip: v_Czip},
                                  contacts: obj_contacts
                                 }

                  context.response.write(JSON.stringify(response)); 
                  return;
              } //if (_restletid == 1639 ) {         

      
/////////////////////////////      
// PUT Dealer Add Contact  // 
/////////////////////////////
             if (_restletid == 1701 ) {        
               
               
                var rec = record.create({ type: record.Type.CONTACT, isDynamic: true });
                rec.setValue('company', PARAMS.dealer_id);
				rec.setValue('firstname', PARAMS.firstname);
				rec.setValue('lastname', PARAMS.lastname);
				rec.setValue('email', PARAMS.email)
				rec.setValue('phone',PARAMS.phone);	
                rec.setValue('title',PARAMS.title);
                //rec.setValue('salutation',PARAMS.last_name + ' ' + PARAMS.first_name);
                rec.save();

                context.response.write(JSON.stringify({status:'Done'})); 
                return;  
             } //if (_restletid == 1701 ) {
  
/////////////////////////////      
// PUT Dealer Update Contact  // 
/////////////////////////////
             if (_restletid == 1702) {    
               
                 record.submitFields({
							type: record.Type.CONTACT,
							id: PARAMS.contact_id,
							values: {'firstname': PARAMS.firstname,
                                     'lastname': PARAMS.lastname,
                                     'email': PARAMS.email,
                                     'phone': PARAMS.phone,
                                     'title': PARAMS.title

                                      }
						});
                       
                context.response.write(JSON.stringify({status:'Done'})); 
                return;  
             } //if (_restletid == 1701 ) {
    
/////////////////////////////      
// PUT Dealer Delete Contact  // 
/////////////////////////////
             if (_restletid == 1703) {  
                record.delete({type: record.Type.CONTACT,id: PARAMS.contact_id});
                context.response.write(JSON.stringify({status:'Done'})); 
                return;  
             } //if (_restletid == 1701 ) {        

/////////////////////////////      
// PUT Owner Case  // 
/////////////////////////////
             if (_restletid == 1800 ) {        
               	var rec = record.create({ type: contact, isDynamic: true, defaultValues: { entity: _id } });
				rec.setValue('firstname', PARAMS.contact.firstname);
				rec.setValue('lastname', PARAMS.contact.lastname);
				rec.setValue('email', PARAMS.contact.email)
				rec.setValue('phone',PARAMS.contact.phone);
                rec.setValue('phone', PARAMS.contact.phone);	
                rec.save();
                context.response.write(JSON.stringify({status:'Done'})); 
                return;  
             } //if (_restletid == 1800 ) {
/////////////////////////////      
// PUT Case  // 
/////////////////////////////
             if (_restletid == 1801 ) {        
               	
               /*
                * "case_id": 334324,
                  "recipient_id": 30823,
                  "author_id": 1234,
                  "subject": "My van done broke!",
                  "message": "this is a message\nwith newlines\nhopefully it works!",
                  "file": "iVBORw0KGgoAAAANSUhEUgAAA70AAAnNCAYAAADhj1IjAAA..." 
               */
                /*
                 * var _sql = "SELECT email FROM customer WHERE id = " + PARAMS.recipient_id;
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var Rrecipient = queryResultSet.asMappedResults();
                var v_recipient_email = Rrecipient[0].email;
                */
                var _sql = "SELECT email FROM customer WHERE id = " + PARAMS.author_id;
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var Rauthor = queryResultSet.asMappedResults();
                var v_author_email = "";
                if (Rauthor.length != 0) {
                   v_author_email = Rauthor[0].email;                    
                }
                else {
                  _sql = "SELECT email FROM employee WHERE id = " + PARAMS.author_id;
                  queryResultSet = query.runSuiteQL({ query: _sql });
                  Rauthor = queryResultSet.asMappedResults();
                  if (Rauthor.length != 0) {
                    v_author_email = Rauthor[0].email;  
                  }
                  else {
                    _sql = "SELECT email FROM contact WHERE id = " + PARAMS.author_id;
                    queryResultSet = query.runSuiteQL({ query: _sql });
                    Rauthor = queryResultSet.asMappedResults();
                    if (Rauthor.length != 0) {
                      v_author_email = Rauthor[0].email;  
                    }
                    else {
                      context.response.write(JSON.stringify({status:'Author not found'})); 
                      return;
                    }
                  }
                }
                
                
                var _sql = "SELECT email FROM employee WHERE id = " + PARAMS.recipient_id;
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var Rrecipient = queryResultSet.asMappedResults();
                var v_recipient_email = Rrecipient[0].email;
                
                /*var _sql = "SELECT email FROM employee WHERE id = " + PARAMS.author_id;
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var Rauthor = queryResultSet.asMappedResults();
                var v_author_email = Rauthor[0].email;
                */ 
                var rec = record.create({ type: record.Type.MESSAGE, isDynamic: true });
				rec.setValue('activity',       PARAMS.case_id);
                rec.setValue('recipient',      PARAMS.recipient_id);
                rec.setValue('recipientemail', v_recipient_email)
				rec.setValue('author',         PARAMS.author_id)
				rec.setValue('authoremail',    v_author_email ); // "help@storytelleroverland.com" 
                rec.setValue('subject',        PARAMS.subject);
                rec.setValue('message',        PARAMS.message); 
                
                rec.save();
                context.response.write(JSON.stringify({status:'Done'})); 
                return;  
             } //if (_restletid == 1801 ) {
/////////////////////////////      
// GET VAN // 
/////////////////////////////
             if (_restletid == 1900 ) {        
      
               var vvan_id = 0;
               var response = "";
               if ( _id != 0 ) {
                  var _sql = " SELECT name, " + 
				   			          "BUILTIN.DF(custrecord_sto_van_item) as Item, " + 
                                      "custrecord_sto_van_model, " +
                                      "custrecord_van_dealer_delivery_date, " +
                   				      "custrecord_van_dealer, " +
                    				  "id as vanid " + 
                                      "FROM customrecord_sto_van " + 
                                      "WHERE customrecord_sto_van.id = " + _id;
	              var queryResultSet = query.runSuiteQL({ query: _sql });
        	      var Rdata = queryResultSet.asMappedResults();
                  if (Rdata.length != 0 ) { 
                    var vvan_id = _id;
                  };
               } else {
                  if (PARAMS.vin != "") {
                     var _sql = " SELECT name, " + 
				   			             "BUILTIN.DF(custrecord_sto_van_item) as Item, " + 
                                         "custrecord_sto_van_model, " +
                                         "custrecord_van_dealer_delivery_date, " +
                   				         "custrecord_van_dealer, " +
                    				     "id as vanid " + 
                                         "FROM customrecord_sto_van " + 
                                         "WHERE name = '" + PARAMS.vin + "'";
	                 var queryResultSet = query.runSuiteQL({ query: _sql });
        	         var Rdata = queryResultSet.asMappedResults();
                     if (Rdata.length != 0 ) { 
                       _id = Rdata[0].vanid;
                       var vvan_id = _id;
                     };
                  };                      
               };

               if (vvan_id == 0 ) {
                  
                  context.response.write('{"id": "NOT FOUND"}'); 

               }
               else {
                 var _sql = "SELECT id as warrid, " + 
                             "custrecord_sto_warr_reg_start_date as warranty_start, " + 
                             "custrecord_sto_warr_reg_expiration_date as warranty_end, " + 
                             "custrecord_sto_warr_reg_primowner as ownid, " +
                             "custrecord_sto_warr_reg_owner_first as firstname, " + 
                             "custrecord_sto_warr_reg_owner_last as lastname, " + 
                      		 "custrecord_sto_warr_reg_primowner_email," +
                             "custrecord_sto_warr_reg_primowner_phone," +
                             "FROM CUSTOMRECORD_STO_WARR_REG " + 
                             "WHERE custrecord_sto_warr_reg_van_vin = "  + _id;
                  var queryResultSet = query.runSuiteQL({ query: _sql });
                  var Rwarr = queryResultSet.asMappedResults();
                  var obj_warr = [];
                  var obj_owner = []; 
                  for (var i = 0; i < Rwarr.length; i++) {
                   
                    var _sql = " SELECT id, firstname, lastname, BUILTIN.DF(category) AS _cat, email, defaultbillingaddress, defaultshippingaddress " + 
                               " FROM customer " +
                               " WHERE customer.id = " + Rwarr[i].ownid;
                  // context.response.write("OWNER>" + Rwarr[i].ownid); 
                    var queryResultSet = query.runSuiteQL({ query: _sql });
                    var Rcust = queryResultSet.asMappedResults();          
                    var v_addr1 = "";
                    var v_addr2 = "";
                    var v_city  = "";
                    var v_state = "";
                    var v_zip   = "";
                    if (Rcust.length != 0) {
                        var vaddr = Rcust[0].defaultbillingaddress;
                        if ( vaddr == 0 ) {
                            vaddr = Rcust[0].defaultshippingaddress;
                        }
                        
                        if ( vaddr != 0 ) { 
                            var _sql = " SELECT addr1, addr2, city, state, zip " + 
                                       " FROM companyaddressbookentityaddress " +
                                       " WHERE companyaddressbookentityaddress.nkey = " + vaddr;
                            var queryResultSet = query.runSuiteQL({ query: _sql });
                            var Raddr = queryResultSet.asMappedResults();
                            if (Raddr.length != 0) {
                              v_addr1 = Raddr[0].addr1;
                              v_addr2 = Raddr[0].addr2;
                              v_city  = Raddr[0].city;
                              v_state = Raddr[0].state;
                              v_zip   = Raddr[0].zip;
                            }
                        }    
                    }
					/*obj_owner = [];
                    obj_owner.push ({id: Rwarr[i].ownid,
                                      firstname : Rwarr[i].firstname ,
                                      lastname : Rwarr[i].lastname,
                                      email : Rwarr[i].custrecord_sto_warr_reg_primowner_email,
                                      phone : Rwarr[i].custrecord_sto_warr_reg_primowner_phone,
                                      addr1 : v_addr1,
                                      addr2 : v_addr2,
                                      city : v_city,
                                      state : v_state,
                                      zip : v_zip
                                    });
                    */
                    obj_warr.push ({ id: Rwarr[i].warrid,
                                     warranty_start : Rwarr[i].warranty_start ,
                                     warranty_end : Rwarr[i].warranty_end,
                                     ownerid : Rwarr[i].ownid,
                                     firstname : Rwarr[i].firstname ,
                                     lastname : Rwarr[i].lastname,
                                     email : Rwarr[i].custrecord_sto_warr_reg_primowner_email,
                                     phone : Rwarr[i].custrecord_sto_warr_reg_primowner_phone,
                                     addr1 : v_addr1,
                                     addr2 : v_addr2,
                                     city : v_city,
                                     state : v_state,
                                     zip : v_zip
                                   });  
                  }    
                  
                 var _sql = "SELECT companyname " + 
                            "FROM customer " + 
                            "WHERE customer.id = " + Rdata[0].custrecord_van_dealer ;
                 var queryResultSet = query.runSuiteQL({ query: _sql });
                 var rdealer = queryResultSet.asMappedResults();
                 var v_dealername = "";
                 if (rdealer.length != 0) v_dealername = rdealer[0].companyname ;
                 var response = {id: _id,
                                  vin : Rdata[0].name,
                                  model : Rdata[0].custrecord_sto_van_model,
                                  dealer_delivery_date : Rdata[0].custrecord_van_dealer_delivery_date,
                                  dealer_id : Rdata[0].custrecord_van_dealer,                             
                                  dealer_name : v_dealername,                             
                                  warranty_info: obj_warr };
                 context.response.write(JSON.stringify(response)); 
               }    
               return;  
             } //if (_restletid == 1900 ) {
             
/**********************************/
/* POST Van Warranty Registration */
     
             if (_restletid == 1901 ) {        
               
               function saveJPEGFile(fileName, fileContents, folderID) {
                 if (fileContents.indexOf('data:image/jpeg;base64') != -1)
                     fileContents = fileContents.substring('data:image/jpeg;base64,'.length, fileContents.length);
                 var fileObj = file.create({name: fileName,
                                            fileType: file.Type.PDF,
                                            contents: fileContents,
                                            folder: folderID,
                                            isOnline:true});
                 var fileId = fileObj.save();
                 log.debug('Exception', "FILE SAVED" + fileId);
                 return fileId;
               }

               /* customer */
               var _sql = "SELECT id as vinid, firstname " + 
                          "FROM customer " + 
                          "WHERE customer.email = '" + PARAMS.email + "'" ;
               var queryResultSet = query.runSuiteQL({ query: _sql });
               var rcust = queryResultSet.asMappedResults();
               if (rcust.length == 0 ) {  
               	 var reccust = record.create({
                     type: record.Type.CUSTOMER,
                     isDynamic: true});
       			 reccust.setValue('subsidiary', 1 );
      			 reccust.setValue('companyname', PARAMS.firstname + " " + PARAMS.lastname);
       			 reccust.setValue('firstname', PARAMS.firstname);
       			 reccust.setValue('lastname', PARAMS.lastname);
       			 
                 reccust.setValue('email', PARAMS.email);
                 reccust.setValue('phone', PARAMS.phone );  
       			 reccust.setValue('category', 2);  
                 reccust.setValue('isperson', 'T');
                 
                 reccust.selectNewLine({sublistId: 'addressbook'});

        		 var addressbook = reccust.getCurrentSublistSubrecord({sublistId: 'addressbook',fieldId: 'addressbookaddress'});
        		 addressbook.setValue('country', PARAMS.country);
        		 addressbook.setValue('city', PARAMS.city);
        		 addressbook.setValue('state', PARAMS.state);
        		 addressbook.setValue('zip', PARAMS.zip);
        		 addressbook.setValue('addr1', PARAMS.addr1);
        		 addressbook.setValue('addr2', PARAMS.addr2);
        		 addressbook.setValue('addressee', PARAMS.firstname + " " + PARAMS.lastname);
        		 reccust.commitLine({sublistId: 'addressbook'});
                 var rcust_id = reccust.save();  
               } 
               else {
                 var rcust_id = rcust[0].vinid;
               };               
               /* customer [end] */


               /* VIN */ 
               var _sql = "SELECT id " + 
                          "FROM customrecord_sto_van " + 
                          "WHERE name = '" + PARAMS.vin + "'" ;
               var queryResultSet = query.runSuiteQL({ query: _sql });
               var rvin = queryResultSet.asMappedResults();
               /* VIN [end ] */
              
               /* DATE */ 
               var myDateString= PARAMS.warranty_start;
               myDateString = myDateString.replace(/-/g, '/');
               var parseStartDate = format.parse({
                  value: myDateString,
                  type: format.Type.DATE
               });    
               var myDateString= PARAMS.warranty_end;
               myDateString = myDateString.replace(/-/g, '/');
               var parseEndDate = format.parse({
                  value: myDateString,
                  type: format.Type.DATE
               });    
               /* DATE [end] */                
               

/************************************ FILE ***********************/            
               
var v_content = "";
               
               
               var rec = record.create({ type: 'customrecord_sto_warr_reg', isDynamic: true}); 
               rec.setValue('name', PARAMS.name);
               rec.setValue('custrecord_sto_warr_reg_primowner', rcust_id);
               rec.setValue('custrecord_sto_warr_reg_van_vin', rvin[0].id );
               rec.setValue('custrecord_sto_warr_reg_van_model', PARAMS.van_model);   /* custrecord_sto_van_model */
			   rec.setValue('custrecord_sto_warr_reg_dealer_name', PARAMS.dealer_id); 
               rec.setValue('custrecord_sto_warr_reg_mileage', PARAMS.mileage);   
               rec.setValue('custrecord_sto_warr_reg_start_date',parseStartDate);
               rec.setValue('custrecord_sto_warr_reg_expiration_date', parseEndDate);
               rec.setValue('custrecord_sto_warr_reg_status', 1);
               
               var vsend_email = false;
               try{
                 var warr_rec_id = rec.save();
                 var response = {id: warr_rec_id,
                                 ownerid: rcust_id};
                 v_send_email = true;
               } 
               catch (e) {
                 log.debug('',e + ' ' + e.message)
                 var response = {error: e.message}; 
               };
               var real_img_name = "Warranty_" + warr_rec_id + ".pdf";
               var img_file_id = saveJPEGFile(real_img_name, v_content, 142318);
               record.submitFields({
							type: 'customrecord_sto_warr_reg',
							id: warr_rec_id,
							values: {'custrecord_sto_warr_reg_file': img_file_id },
                            options:{enableSourcing: true,
                                     ignoreMandatoryFields: true}
						});
               record.submitFields({
							type: 'customrecord_sto_warr_reg',
							id: warr_rec_id,
							values: {'custrecord_sto_warr_reg_primowner': rcust_id },
                            options:{enableSourcing: true,
                                     ignoreMandatoryFields: true}
						});
               record.submitFields({
							type: 'customrecord_sto_warr_reg',
							id: warr_rec_id,
							values: {'custrecord_sto_warr_reg_owner_first': PARAMS.firstname },
                            options:{enableSourcing: true,
                                     ignoreMandatoryFields: true}
						});
               record.submitFields({
							type: 'customrecord_sto_warr_reg',
							id: warr_rec_id,
							values: {'custrecord_sto_warr_reg_owner_last': PARAMS.lastname },
                            options:{enableSourcing: true,
                                     ignoreMandatoryFields: true}
						});
               if ( v_send_email ) {
               //context.response.write(JSON.stringify( "send email here")); 
                 //context.response.write(rcust_id);
                 var _sql = "SELECT email, companyname " + 
                            "FROM customer " + 
                            "WHERE customer.id = '" + PARAMS.dealer_id + "'" ;
                 var queryResultSet = query.runSuiteQL({ query: _sql });
                 var rdealer = queryResultSet.asMappedResults();
                 var senderId = 126227;
                 var recipientEmail = 'paquet.steve@gmail.com'; //'warranty@storytelleroverland.com';
                 var v_firstname = PARAMS.firstname;
                 var v_lastname =  PARAMS.lastname;
                 var v_body = "<html> <body> <a>" +
                                "<b>Van: </b>" +  PARAMS.name + "</a><br>" +
                                "<b>Dealer: </b>" +  rdealer[0].companyname + " (" + PARAMS.dealer_id + ") </a><br>" +
                                "<b>Dealer Email:</b> " + rdealer[0].email + " </a><br>" +
                      			"<b>Warranty Start date : </b>" +  PARAMS.warranty_start + "</a><br>" +
                      			"<b>Mileage : </b>" +  PARAMS.mileage + "</a><br>" +
                                "<b>Customer:</b>" + v_firstname + " " + v_lastname + "  (" + rcust_id + ") <br>" +
                                "<b>Address :</b> <br>" +
                                "    " + PARAMS.addr1 +  "<br>" +
                                "    " + PARAMS.addr2 +  "<br>" +
                                "    " + PARAMS.city + "," + PARAMS.state + " " + PARAMS.zip + "<br>" +
                                "    " + PARAMS.country  +  "<br>" +
                                "<b>Email:</b>" + PARAMS.email + "<br>" +
                                "<b>Phone:</b>" + PARAMS.phone + "<br><br><br>" +
                                '<a href=https://5330460.app.netsuite.com/app/common/custom/custrecordentry.nl?rectype=354&id=' + 
                                warr_rec_id + '>See Warranty</a> <br>' +
                                 "</body></html>";
                  var v_subject = "New Storyteller Van Warrany from " + rdealer[0].companyname + " created for " + v_firstname + " " + v_lastname;
                  email.send({
		            author: senderId,
    		        recipients: recipientEmail,
    		        subject: v_subject ,
    		        body: v_body
    		     });            

                              
               };
               context.response.write(JSON.stringify(response)); 
             return;  

             } //if (_restletid == 1901 ) {
       
/**********************************/
/* GET Dealer Contact */
     
             if (_restletid == 1902) {   
                 var _sql = "SELECT Contact.id, " +
                                   "Contact.firstname, " +
                                   "Contact.lastname, "  + 
                                   "Contact.email, "     + 
                                   "Contact.phone, "     + 
                                   "Contact.title, "     + 
                                   "Contact.company, "   +  
                                   "BUILTIN.DF(Contact.company) as companyname " +
                                   "FROM contact " + 
                                   "WHERE contact.id = " + _id ;
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var r_dealcontact = queryResultSet.asMappedResults();
                var response = {id: "not found"};
                if (r_dealcontact.length > 0) {
                   response = {id:          r_dealcontact[0].id,
                                     firstname:   r_dealcontact[0].firstname,
                                     lastname:    r_dealcontact[0].lastname,
                                     email:       r_dealcontact[0].email,
                                     phone:       r_dealcontact[0].phone,
                                     title:       r_dealcontact[0].title,
                                     company:     r_dealcontact[0].company,
                                     company_name:r_dealcontact[0].companyname
                                   };

                };
                context.response.write(JSON.stringify(response)); 
                return;  
                 
             } //if (_restletid == 1902) {
               
             /**********************************/
             /* POST Case */
     
             if (_restletid == 1903 ) {        
               var response = "";
               try {
                   var sample_data = {
                       status: 1,
                       profile: 1,
                       company: PARAMS.company,
                       contact: PARAMS.contact,
                       assigned: PARAMS.assigned,
                       custom_form: -100,
                       email: PARAMS.email,
                       incomingmessage: PARAMS.message,
                       title: PARAMS.subject,
                       startdate: PARAMS.date, 
                       category: 1,
                       custeventco_case_van_record: PARAMS.van_id,
                       custevent_cop_case_mileage: PARAMS.mileage
                  };
                  var case_rec = record.create({
                       type: 'supportcase'
                  }) ;
                  for (var key in sample_data ) {
                      if(key == 'startdate')  {
                           var vvdate = sample_data[key].replace('-', '/').replace('-', '/');
                           case_rec.setValue({fieldId: key, value: format.parse({ value: vvdate , type: format.Type.DATE })}); 
                           continue;
                       }
                       case_rec.setValue(key, sample_data[key]);
                   }
                   var vcaseid = case_rec.save();
                   var response = vcaseid;
               } catch (e) {
                   var response = e;
               }
               context.response.write(JSON.stringify(response));
               return;
             } //if (_restletid == 1903) {
             
      
      
             /*PUT Owner Account Info*/
             if (_restletid == 1904 ) {       
               record.submitFields({
							type: record.Type.CUSTOMER,
							id: _id,
							values: {'firstname': PARAMS.firstname,
                                     'lastname': PARAMS.lastname,
                                     'email': PARAMS.email,
                                     'phone': PARAMS.phone,
                                      }
		        });
				var _sql = "SELECT id, defaultbillingaddress, defaultshippingaddress " + 
                           "FROM customer " + 
                           "WHERE customer.id = " + _id ;
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var rcust = queryResultSet.asMappedResults();
                log.debug ('vaddr', rcust[0].defaultbillingaddress);
                var vaddr = rcust[0].defaultbillingaddress || 0;
                log.debug ('vaddr', vaddr);
                if ( vaddr == 0 ) {
                     vaddr = rcust[0].defaultshippingaddress;
                     log.debug ('vaddr',vaddr);
                }
                if ( vaddr != 0 ) {
                    var rcust = record.load({id: _id, type: "CUSTOMER", isDynamic : true });
                    var vnumlines = rcust.getLineCount({ sublistId: 'addressbook' });
                    for (var i = 0; i < vnumlines; i++) {
                        rcust.selectLine({sublistId: 'addressbook', line: i });

                        var addressSubrecord = rcust.getCurrentSublistSubrecord({
                            sublistId: 'addressbook',
                            fieldId: 'addressbookaddress'
                        });
                        var PaddressSubrecord = JSON.parse(JSON.stringify(addressSubrecord));
                        if (  PaddressSubrecord.fields.id == vaddr  ) {
                          addressSubrecord.setValue({fieldId: 'addr1',value: PARAMS.addr1});    
                          addressSubrecord.setValue({fieldId: 'addr2',value: PARAMS.addr2});    
                          addressSubrecord.setValue({fieldId: 'city' ,value: PARAMS.city});    
                          addressSubrecord.setValue({fieldId: 'state',value: PARAMS.state});    
                          addressSubrecord.setValue({fieldId: 'zip'  ,value: PARAMS.zip});    
                          rcust.commitLine({sublistId: 'addressbook'});
                        }
                    } //for (var i = 0; i < vnumlines; i++) {                  
                  
                }    
                var rcust_id = rcust.save();  
                context.response.write(JSON.stringify({status:'Done'})); 
                return;  
             } //if (_restletid == 1904) {
             /* PUT Van Warranty Registration */
             if (_restletid == 1905 ) {       
                var _sql = "SELECT id FROM customer " +
                           " WHERE email = '" + PARAMS.email + "'" +
                           "   AND isinactive = 'F' " + 
                           "   AND category = 2 ";
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var r_cust = queryResultSet.asMappedResults();
                if (r_cust.length != 0) {
                   var rcust_id = r_cust[0]['id'];
                } else {
                   var reccust = record.create({
                         type: record.Type.CUSTOMER,
                         isDynamic: true});
                   reccust.setValue('subsidiary', 1 );
                   reccust.setValue('companyname', PARAMS.firstname + " " + PARAMS.lastname);
                   reccust.setValue('firstname', PARAMS.firstname);
                   reccust.setValue('lastname', PARAMS.lastname);
				   reccust.setValue('email', PARAMS.email);
                   reccust.setValue('phone', PARAMS.phone );  
                   reccust.setValue('category', 2);  
                   reccust.setValue('isperson', 'T');

                   reccust.selectNewLine({sublistId: 'addressbook'});

                   var addressbook = reccust.getCurrentSublistSubrecord({sublistId: 'addressbook',fieldId: 'addressbookaddress'});
                   addressbook.setValue('country', "US");
                   addressbook.setValue('city', PARAMS.city);
                   addressbook.setValue('state', PARAMS.state);
                   addressbook.setValue('zip', PARAMS.zip);
                   addressbook.setValue('addr1', PARAMS.addr1);
                   addressbook.setValue('addr2', PARAMS.addr2);
                   addressbook.setValue('addressee', PARAMS.firstname + " " + PARAMS.lastname);
                   reccust.commitLine({sublistId: 'addressbook'});
                   var rcust_id = reccust.save();                 
                } // else - if (r_custcontact.length != 0) {
                record.submitFields({
							type: 'customrecord_sto_warr_reg',
							id: PARAMS.warranty_id,
							values: {'custrecord_sto_warr_reg_primowner': rcust_id},
                            enableSourcing: true
		        });
                
                var _sql = "SELECT id FROM customrecord_sto_van " +
                           " WHERE custrecord_sto_van_warr_reg = " + PARAMS.warranty_id;
                var queryResultSet = query.runSuiteQL({ query: _sql });
                var r_warr = queryResultSet.asMappedResults();
                if (r_warr.length != 0) {
	                record.submitFields({
								type: 'customrecord_sto_van',
								id: r_warr[0].id ,
								values: {'custrecord_sto_van_currentowner': rcust_id},
                            	enableSourcing: true});
             	}
                context.response.write(JSON.stringify({new_owner_id: rcust_id })); 
             	return;  
             } //if (_restletid == 1905) {
              
        } //function onRequest(context) {


  
  

        function makeid(length) {
            var result           = '';
            var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
            var charactersLength = characters.length;
            for ( var i = 0; i < length; i++ ) {
              result += characters.charAt(Math.floor(Math.random() * charactersLength));
           }
           return result;
        }           
   
  
  

    return {
        onRequest: onRequest
    };
    
});
